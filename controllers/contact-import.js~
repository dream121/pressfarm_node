
var mongoose = require('mongoose');
mongoose.createConnection('localhost', 'test');


var schemaKeyList = ['email', 'password', 'datePaid', 'admin', 'resetPasswordExpires','resetPasswordToken'];

var userSchema = new mongoose.Schema({
    email: String,
    password:String,
    datepaid: String,
    Admin: String,
    resetPasswordExpires: String,
    resetPasswordToken:String
});
var userDoc = mongoose.model('User', userSchema);

var fs = require('fs');
var lineList = fs.readFileSync('user.csv').toString().split('\n');
lineList.shift(); // Shift the headings off the list of records.

function queryAllEntries () {
    userDoc.aggregate(
        {$group: {_id: '$email', oppArray: {$push: {
            email: '$email',
            password: '$password', 
            datepaid: '$datepaid',
            admin : '$admin',
	    resetPasswordExpires : '$resetPasswordExpires',
	    resetPasswordToken : '$resetPasswordToken'			
            }}
        }}, function(err, qDocList) {
        //console.log(util.inspect(qDocList, false, 10));
        process.exit(0);
    });
}

// Recursively go through list adding documents.
// (This will overload the stack when lots of entries
// are inserted.  In practice I make heavy use the NodeJS 
// "async" module to avoid such situations.)
function createDocRecurse (err) {
    if (err) {
        console.log(err);
        process.exit(1);
    }
    if (lineList.length) {
        var line = lineList.shift();
        var doc = new userDoc();
        line.split('\t').forEach(function (entry, i) {
            doc[schemaKeyList[i]] = entry;
        });
        doc.save(createDocRecurse);
    } else {
        // After the last entry query to show the result.
        queryAllEntries();
    }
}

createDocRecurse(null);
